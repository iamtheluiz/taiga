# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
- name: SELECTED_RELEASE_GREETING_MESSAGE
  displayName: Escreva uma mensagem de boas vindas
  type: string
- name: SELECTED_TAIGA_DEFAULT_IMAGE
  displayName: Escolha a imagem padrão da aplicação
  type: string
  values:
  - animated-taiga-clap
  - animated-taiga-haha
  - animated-taiga-he
  - animated-taiga-hunf
  - animated-taiga-shy
  - animated-taiga-smile
  - animated-taiga-surprise
  - animated-taiga-v
  - animated-taiga-what
  - taiga-shy
  - taiga-surprise
  - taiga-wait

variables:
- name: SONAR_PROJECT_KEY
  value: Taiga
- name: SONAR_PROJECT_NAME
  value: Taiga
- name: DOTNET_PUBLISH_OUTDIR
  value: ../out/Taiga-win32-x64/resources
- name: RELEASE_GREETING_MESSAGE
  value: $(SELECTED_RELEASE_GREETING_MESSAGE)
- name: TAIGA_DEFAULT_IMAGE
  value: $(SELECTED_TAIGA_DEFAULT_IMAGE)

trigger: none

jobs:
- job: build
  displayName: Build Package
  pool: MyPC
  steps:
    # - task: SonarCloudPrepare@1
    #   inputs:
    #     SonarCloud: 'SonnarCloud'
    #     organization: 'iamtheluiz'
    #     scannerMode: 'CLI'
    #     configMode: 'manual'
    #     cliProjectKey: '$(SONAR_PROJECT_KEY)'
    #     cliProjectName: '$(SONAR_PROJECT_NAME)'
    #     cliSources: '.'
    
    # - task: UseDotNet@2
    #   inputs:
    #     packageType: 'sdk'
    #     version: '6.x'
    
    # - task: NodeTool@0
    #   inputs:
    #     versionSpec: '16.x'
    
    # - task: Npm@1
    #   inputs:
    #     command: 'install'
    #     workingDir: '.'

    # - task: Npm@1
    #   inputs:
    #     command: 'custom'
    #     workingDir: '.'
    #     customCommand: 'run lint'

    # - task: Npm@1
    #   continueOnError: true
    #   inputs:
    #     command: 'custom'
    #     workingDir: '.'
    #     customCommand: 'run test'

    # - task: PublishTestResults@2
    #   inputs:
    #     testResultsFormat: 'JUnit'
    #     testResultsFiles: 'junit.xml'
    #     mergeTestResults: true
    #     failTaskOnFailedTests: true
    
    # - task: PowerShell@2
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       $env:RELEASE_GREETING_MESSAGE="$(RELEASE_GREETING_MESSAGE)"
    #       $env:TAIGA_DEFAULT_IMAGE="$(TAIGA_DEFAULT_IMAGE)"
    #       npm run package:ci

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host $env:RELEASE_GREETING_MESSAGE
          Write-Host $env:TAIGA_DEFAULT_IMAGE
      env:
        RELEASE_GREETING_MESSAGE: $(RELEASE_GREETING_MESSAGE)
        TAIGA_DEFAULT_IMAGE: $(TAIGA_DEFAULT_IMAGE)
      
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        arguments: '-c Release -o $(DOTNET_PUBLISH_OUTDIR)'
        zipAfterPublish: false
        modifyOutputPath: false
        workingDirectory: './TaigaRecognition'

    - task: SonarCloudAnalyze@1

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'

    - task: sonarcloud-buildbreaker@2
      inputs:
        SonarCloud: 'SonnarCloud'
        organization: 'iamtheluiz'
    
    - task: CopyFiles@2
      inputs:
        SourceFolder: './out'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
